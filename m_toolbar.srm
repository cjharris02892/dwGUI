HA$PBExportHeader$m_toolbar.srm
$PBExportComments$Menu class
forward
global type m_toolbar from menu
end type
end forward

global type m_toolbar from menu
end type
global m_toolbar m_toolbar

type variables
Private:

	DragObject						idrg_parent
end variables

forward prototypes
public function integer mf_popmenu (dragobject vdrg_parent, menu vm_popmenu, integer vi_xpos, integer vi_ypos)
public function integer mf_popmenu (dragobject vdrg_parent, integer vi_xpos, integer vi_ypos)
public subroutine mf_register (dragobject vdrg_parent)
public function dragobject mf_getparent ()
public subroutine mf_setparent (dragobject vdrg_parent)
end prototypes

public function integer mf_popmenu (dragobject vdrg_parent, menu vm_popmenu, integer vi_xpos, integer vi_ypos);// CopyRight (c) 2016 by Christopher Harris, all rights reserved.
//
// This code and accompanying materials are made available under the GPLv3
// license which accompanys this distribution and can be found at:
//
// http://www.gnu.org/licenses/gpl-3.0.html.
//
// Original Author: Christopher Harris

n_cst_toolBar							lnvo_toolBar

Window									lw_parent,	lw_frame,	lw_childParent
GraphicObject							lgo
	
lw_parent								= lnvo_toolBar.of_getParentWindow(vdrg_parent)
	
IF IsValid(lw_parent) THEN
	
	lw_frame								= lnvo_toolBar.of_getFrame(vdrg_parent)

	IF IsValid(lw_frame) THEN

		IF lw_parent.windowType = Child! THEN
			lw_parent					= lw_frame
		ELSE

			IF lw_parent.windowType = Main! AND lnvo_toolBar.of_IsMDIChild(lw_parent) THEN
				lw_parent				= lw_frame
			ELSE
					
				IF lw_parent.windowType = Main! AND lnvo_toolBar.of_IsChild(lw_parent) THEN
					
					lgo 					= lw_parent
						
					DO WHILE IsValid(lgo)
						
						IF lgo.TypeOf() = Window! THEN
							
							lw_parent	= lgo
							lgo 			= lw_parent.ParentWindow()
							
						ELSE
							lgo 			= lgo.GetParent()
						END IF
							
						IF lgo.TypeOf() = Window! THEN
							
							lw_parent	= lgo
							EXIT
							
						END IF
					
					LOOP
			
					IF lw_parent.TypeOf() = Window! THEN
						IF lw_parent.windowType = Main! AND lnvo_toolBar.of_IsMDIChild(lw_parent) THEN
							lw_parent	= lw_frame
						END IF
					END IF
						
				END IF
			END IF
		END IF

	ELSE
		IF lw_parent.windowType = Child! THEN
			
			lw_childparent				= lw_parent.ParentWindow()
			
			IF IsValid(lw_childParent) THEN
				lw_parent				= lw_childParent
			END IF
			
		END IF
	END IF
ELSE
	Return(-1)
END IF

Return(vm_popMenu.PopMenu(lw_parent.PointerX(), lw_parent.PointerY()))
end function

public function integer mf_popmenu (dragobject vdrg_parent, integer vi_xpos, integer vi_ypos);// CopyRight (c) 2016 by Christopher Harris, all rights reserved.
//
// This code and accompanying materials are made available under the GPLv3
// license which accompanys this distribution and can be found at:
//
// http://www.gnu.org/licenses/gpl-3.0.html.
//
// Original Author: Christopher Harris

Return(mf_popMenu(vdrg_parent, this, vi_xPos, vi_yPos))
end function

public subroutine mf_register (dragobject vdrg_parent);// CopyRight (c) 2016 by Christopher Harris, all rights reserved.
//
// This code and accompanying materials are made available under the GPLv3
// license which accompanys this distribution and can be found at:
//
// http://www.gnu.org/licenses/gpl-3.0.html.
//
// Original Author: Christopher Harris

idrg_parent								= vdrg_parent

RETURN
end subroutine

public function dragobject mf_getparent ();// CopyRight (c) 2016 by Christopher Harris, all rights reserved.
//
// This code and accompanying materials are made available under the GPLv3
// license which accompanys this distribution and can be found at:
//
// http://www.gnu.org/licenses/gpl-3.0.html.
//
// Original Author: Christopher Harris

Return(idrg_parent)
end function

public subroutine mf_setparent (dragobject vdrg_parent);// CopyRight (c) 2016 by Christopher Harris, all rights reserved.
//
// This code and accompanying materials are made available under the GPLv3
// license which accompanys this distribution and can be found at:
//
// http://www.gnu.org/licenses/gpl-3.0.html.
//
// Original Author: Christopher Harris

idrg_parent								= vdrg_parent

RETURN
end subroutine

on m_toolbar.create
m_toolbar=this
call super::create
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menutitles = true
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_toolbar.destroy
call super::destroy
end on

